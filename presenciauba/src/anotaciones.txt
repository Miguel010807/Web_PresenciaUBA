EXPLICACIÓN DE Login.jsx
-----------------------------------
IMPORTS
-----------------------------------
- useState: Hook de React para manejar estados internos del componente.
- api: archivo de configuración de Axios que sirve para enviar peticiones al backend.

-----------------------------------
ESTADOS DEL COMPONENTE
-----------------------------------
- correo: guarda lo que el usuario escribe en el campo de email.
- password: guarda lo que el usuario escribe en el campo de contraseña.
- error: almacena un mensaje de error si las credenciales son inválidas o si no hay conexión al WiFi institucional.

-----------------------------------
3FUNCIÓN handleSubmit
-----------------------------------
- Se ejecuta al enviar el formulario.
- e.preventDefault(): evita que la página se recargue automáticamente.
- api.post("/login", { correo, password }): envía los datos al backend.
- Si la respuesta es correcta:
    - Guarda el token en localStorage.
    - Llama a la función onLogin() con los datos del usuario, para avisar al componente padre (App.jsx) que el login fue exitoso.
- Si hay error:
    - Actualiza el estado "error" y muestra un mensaje en pantalla.

-----------------------------------
INTERFAZ DEL USUARIO (JSX)
-----------------------------------
- Contenedor principal con el título "Presencia UBA".
- Formulario con:
    - Un input para correo institucional.
    - Un input para contraseña.
    - Un botón para enviar el formulario.
- Si existe un error, se muestra un mensaje en rojo debajo del formulario.

-----------------------------------
EXPORT
-----------------------------------
- export default Login: permite usar este componente en App.jsx.

-----------------------------------
  RESUMEN
-----------------------------------
Login.jsx:
- Pide correo institucional y contraseña al usuario.
- Envía esos datos al backend para validación.
- Si la autenticación es exitosa, guarda un token en localStorage.
- Si falla, muestra un mensaje de error.

----------------------------------------------
